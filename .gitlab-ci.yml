image: docker:latest
services:
  - docker:dind

stages:
  - CleanImages
  - ConstructImages
  #- ConfigImages
  - CopyIntoImages

Software_Dist:
  stage: CleanImages
  before_script:
    - export DYNAMIC_ENV_VAR=DEV
  only:
    - master
  tags:
    - master
  script:
    - echo running DEPLOY in $DYNAMIC_ENV_VAR
    - export
    - env
    - sudo ansible-playbook playbooks/DeletePackages.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/DeletePackages-R.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/DeleteDocker.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/CleanFileDist.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/DeleteSystemFile.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/DeleteFileIde.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    
    
  when: manual


Software-Dist:
  stage: ConstructImages
  before_script:
    - export DYNAMIC_ENV_VAR=DEV
  only:
    - master
  tags:
    - master
  script:
    - echo running DEPLOY in $DYNAMIC_ENV_VAR
    - export
    - env
    - sudo ansible-playbook playbooks/CopySystemFile.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/UpdatePackages.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/UpdatePackages-R.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/UpdatePackage-Docker.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/CopyFileDocker.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/UpdatePackages-ide.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
  when: manual


# Config_Images:
#   stage: ConfigImages
#   before_script:
#     - export DYNAMIC_ENV_VAR=DEV
#   only:
#     - master

#   #when: always

#   tags:
#     - master
#   script:
#     - echo running DEPLOY in $DYNAMIC_ENV_VAR
#     - export
#     - env
#     - echo running CI_INPUT_ZONEENV in $CI_INPUT_ZONEENV
#     - sudo ansible-playbook playbooks/R-JavaConf.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"

Add_File_Into_Images:
  stage: CopyIntoImages
  before_script:
    - export DYNAMIC_ENV_VAR=DEV
  only:
    - master

  tags:
    - master
  script:
    - echo running DEPLOY in $DYNAMIC_ENV_VAR
    - export
    - env
    - echo running CI_INPUT_ZONEENV in $CI_INPUT_ZONEENV
    - sudo ansible-playbook playbooks/CopyFileRlocal.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/CreateSymbolicLink.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
    - sudo ansible-playbook playbooks/CopyFileIde.yml --extra-vars "ENV=$CI_INPUT_ZONEENV CI_PROJECT_DIR=$CI_PROJECT_DIR"
  when: manual
  
